service: atlantis

frameworkVersion: ">=1.26.0"

custom:
  stage: ${opt:stage, 'dev'}
  environment: ${file(./env.yml)}
  customDomain:
    domainName: api.${self:custom.environment.DOMAIN}
    certificateName: ${self:custom.environment.DOMAIN}
    basePath: ''
    stage: ${self:custom.stage}
    createRoute53Record: true
  client:
    bucketName: ${self:custom.environment.DOMAIN}
    distributionFolder: frontend/dist
    indexDocument: index.html
    errorDocument: error.html

provider:
  name: aws
  runtime: python3.6
  stage: ${self:custom.stage}
  region: us-east-1
  profile: ${self:service}
  timeout: 120
  logRetentionInDays: 14
  deploymentBucket:
    name: serverless.${self:service}.${self:provider.region}
    serverSideEncryption: AES256
  role: ${self:custom.environment.ROLE}
  versionFunctions: false

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-finch

package:
  include:
    - atlantis/**
  exclude:
    - .github/**
    - .travis/**
    - node_modules/**
    - .flake8
    - LICENSE
    - '*.yml*'
    - '*.json'

functions:
  hello:
    handler: backend/handler.hello
    events:
      - http:
          path: hello
          method: get
      - s3:
          bucket: upload
          event: s3:ObjectCreated:*
          rules:
            -  prefix: data/
            -  suffix: .csv
            -  suffix: .tsv
